language: rust
sudo: false

# Refs: https://levans.fr/rust_travis_cache.html
cache:
  directories:
    - /home/travis/.cargo
before_cache:
  - rm -rf /home/travis/.cargo/registry

matrix:
  include:
    # This is the minimum Rust version supported by futures-rs.
    # When updating this, the reminder to update the minimum required version in README.md.
    - name: cargo check (minimum required version)
      rust: 1.36.0
      install:
        # cargo does not support for --features/--no-default-features with workspace, so use cargo-hack instead.
        # Refs: cargo#3620, cargo#4106, cargo#4463, cargo#4753, cargo#5015, cargo#5364, cargo#6195
        - if ! cargo hack -V 2>/dev/null; then
            cargo install cargo-hack;
          fi
      script:
        # remove dev-dependencies to avoid https://github.com/rust-lang/cargo/issues/4866
        - cargo hack --remove-dev-deps --workspace
        # Check no-default-features
        - cargo hack check --workspace --exclude futures-test --ignore-private --no-default-features
        # Check alloc feature
        - cargo hack check --workspace --exclude futures-test --ignore-private --no-default-features --features alloc --ignore-unknown-features
        # Check std feature
        - cargo hack check --workspace --ignore-private --no-default-features --features std --ignore-unknown-features
        # Check compat feature (futures, futures-util)
        - cargo hack check -p futures -p futures-util --no-default-features --features std,io-compat
        # Check thread-pool feature (futures, futures-executor)
        - cargo hack check -p futures -p futures-executor --no-default-features --features std,thread-pool

    # This is the minimum Rust version supported by `async-await` feature.
    # When updating this, the reminder to update the minimum required version of `async-await` feature in README.md.
    - name: cargo build --features async-await (minimum required version)
      rust: 1.39.0
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        # async-await feature is activated by default.
        - cargo build --workspace

    - name: cargo +stable build
      rust: stable
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        - cargo build --workspace

    - name: cargo +beta build
      rust: beta
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        - cargo build --workspace

    - name: cargo test
      rust: nightly
      os: osx

    - name: cargo test
      rust: nightly
      os: linux

    - name: cargo build (with minimal versions)
      rust: nightly
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        - cargo update -Zminimal-versions
        - cargo build --workspace --all-features

    - name: cargo clippy
      rust: nightly
      install:
        - if ! rustup component add clippy 2>/dev/null; then
            target=`curl https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/clippy`;
            echo "'clippy' is unavailable on the toolchain 'nightly', use the toolchain 'nightly-$target' instead";
            rustup toolchain install nightly-$target;
            rustup default nightly-$target;
            rustup component add clippy;
          fi
      script:
        - cargo clippy --workspace --all-features --all-targets

    - name: cargo bench
      rust: nightly
      script:
        - cargo bench --workspace
        - cargo bench --manifest-path futures-util/Cargo.toml --features=bilock,unstable

    - name: cargo build --target=thumbv6m-none-eabi
      rust: nightly
      install:
        - rustup target add thumbv6m-none-eabi
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv6m-none-eabi
            --no-default-features
            --features unstable,cfg-target-has-atomic
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv6m-none-eabi
            --no-default-features
            --features unstable,cfg-target-has-atomic,alloc
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv6m-none-eabi
            --no-default-features
            --features unstable,cfg-target-has-atomic,async-await

    - name: cargo build --target=thumbv7m-none-eabi
      rust: nightly
      install:
        - rustup target add thumbv7m-none-eabi
      script:
        - cargo run --manifest-path ci/remove-dev-dependencies/Cargo.toml */Cargo.toml
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv7m-none-eabi
            --no-default-features
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv7m-none-eabi
            --no-default-features
            --features alloc
        - cargo build --manifest-path futures/Cargo.toml
            --target thumbv7m-none-eabi
            --no-default-features
            --features async-await

    - name: cargo check (features)
      rust: nightly
      install:
        - cargo install cargo-hack
      script:
        # Check each specified feature works properly
        # * `--each-feature` - run for each feature which includes --no-default-features and default features of package
        # * `--no-dev-deps` - build without dev-dependencies to avoid https://github.com/rust-lang/cargo/issues/4866
        # * `--exclude futures-test` - futures-test cannot be compiled with no-default features
        # * `--features unstable` - some features cannot be compiled without this feature
        # * `--ignore-unknown-features` - some crates doesn't have 'unstable' feature
        - cargo hack check
            --each-feature --no-dev-deps
            --workspace --exclude futures-test
            --features unstable --ignore-unknown-features

    - name: cargo doc
      rust: nightly
      script:
        - RUSTDOCFLAGS=-Dwarnings cargo doc --workspace --no-deps --all-features

script:
  - cargo test --workspace --all-features
  - cargo test --workspace --all-features --release

env:
  - RUSTFLAGS=-Dwarnings

notifications:
  email:
    on_success: never
